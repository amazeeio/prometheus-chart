alertmanager:
  nodeSelector:
    region: node

  ## Persist storage

  # storageSpec:
  #   volumeClaimTemplate:
  #   # - metadata:
  #   #     name: alertmanager-db
  #     spec:
  #       storageClassName: gp2
  #       accessModes: ["ReadWriteOnce"]
  #       resources:
  #         requests:
  #           storage: 1Gi

  config:
    route:
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      group_by: ['cluster', 'alertname', 'service']

      # The child route trees
      routes:
      # Do not alert on warning
      - match:
          severity: warning
        receiver: 'null'

    # Inhibition rules allow to mute a set of alerts given that another alert is
    # firing.
    # We use this to mute any warning-level notifications if the same alert is 
    # already critical.
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: ['alertname', 'cluster', 'service']

    receivers:
    - name: 'null'


prometheus:
  nodeSelector:
    region: node
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: gp2
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 200Gi
      selector: {}

grafana:
  nodeSelector:
    region: node
  storageSpec:
    class: gp2
    accessMode: "ReadWriteOnce"
    resources:
      requests:
        storage: 10Gi
    selector: {}
  ## Keep the Dashboards that are defined in this HELM chart
  keepOriginalDashboards: false
  ## Disable anonymous auth
  auth:
    anonymous:
      enabled: "false"
  adminUser: "admin"
  adminPassword: "admin"

deployKubelets: true
deployKubeScheduler: false
deployKubeControllerManager: false
deployCoreDNS: false
deployKubeDNS: false
deployKubeEtcd: false